using UnityEngine;

/// <summary>
/// G√®re le comportement des PNJ en basculant du d√©placement al√©atoire vers un syst√®me de besoins avec pathfinding.
/// Active automatiquement les composants <c>BesoinPlayers</c> et <c>PathfindingAI</c> lorsqu‚Äôun objet avec le tag "feu" est d√©tect√© dans la sc√®ne.
/// </summary>
public class PlayerBehaviourManager : MonoBehaviour
{
    private RandomNPC randomNPC;
    private BesoinPlayers besoinPlayers;
    private PathfindingAI pathfindingAI;

    /// <summary>
    /// Indique si le mode pathfinding est d√©j√† activ√© pour √©viter une activation multiple.
    /// </summary>
    private bool modeActif = false;

    /// <summary>
    /// Initialise les r√©f√©rences aux composants n√©cessaires sur le PNJ.
    /// </summary>
    void Start()
    {
        randomNPC = GetComponentInChildren<RandomNPC>();
        besoinPlayers = GetComponent<BesoinPlayers>();
        pathfindingAI = GetComponent<PathfindingAI>();
    }

    /// <summary>
    /// Surveille l'apparition d'un objet avec le tag "feu" et d√©clenche le passage au mode pathfinding.
    /// </summary>
    void Update()
    {
        if (!modeActif)
        {
            GameObject feuObj = GameObject.FindWithTag("feu");
            if (feuObj != null && feuObj.activeInHierarchy)
            {
                Debug.Log("üî• Feu d√©tect√©, activation du mode pathfinding");
                ActiverModePathfinding();
                modeActif = true;
            }
        }
    }

    /// <summary>
    /// Active le mode besoins + pathfinding en d√©sactivant le d√©placement al√©atoire.
    /// R√©initialise les jauges de besoins pour forcer une action imm√©diate.
    /// </summary>
    void ActiverModePathfinding()
    {
        // D√©sactive le d√©placement al√©atoire
        if (randomNPC != null)
        {
            randomNPC.transform.position = transform.position;
            randomNPC.enabled = false;
        }

        // Active le syst√®me de besoins
        if (besoinPlayers != null)
        {
            besoinPlayers.enabled = true;
            besoinPlayers.faim = 0f;     // Force un besoin actif
            besoinPlayers.soif = 0f;
            besoinPlayers.energie = 0f;

            besoinPlayers.SendMessage("Start"); // ‚ö†Ô∏è Appelle Start() si n√©cessaire
        }

        // Active le pathfinding
        if (pathfindingAI != null)
        {
            pathfindingAI.enabled = true;
        }
    }
}
